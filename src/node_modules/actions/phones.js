import { START, SUCCESS, FAIL } from 'constants/api';
import { 
  fetchPhones as fetchPhonesApi,
  loadMorePhones as loadMorePhonesApi,
  fetchPhoneById as fetchPhoneByIdApi,
  fetchCategories as fetchCategoriesApi
} from 'api';
import * as types from 'constants/phones';
import { getRenderedPhonesLength } from 'selectors';

export const fetchPhones = () => async dispatch => {
  dispatch({ type: types.FETCH_PHONES + START});

  // try {
    const phones = await fetchPhonesApi();
    dispatch({
      type: types.FETCH_PHONES + SUCCESS,
      payload: phones
    })
  // }catch (err) {
    // dispatch({
      // type: types.FETCH_PHONES + FAIL,
      // payload: err,
      // error: true
    // })
  // }
}

export const loadMorePhones = () => async (dispatch, getState) => {
  const offset = getRenderedPhonesLength(getState());

  console.log(offset);

  dispatch({ type: types.LOAD_MORE_PHONES + START });

  try {
    const phones = await loadMorePhonesApi();
    
    dispatch({
      type: types.LOAD_MORE_PHONES + SUCCESS,
      payload: phones
    })
  } catch (err) {
    dispatch({
      type: types.LOAD_MORE_PHONES + FAIL,
      payload: err,
      error: true
    })
  }
}

export const fetchPhoneById = id => async dispatch => {
  dispatch({type: types.FETCH_PHONE_BY_ID + START})

  try {
    const phone = await fetchPhoneByIdApi(id);
    dispatch({
      type: types.FETCH_PHONE_BY_ID + SUCCESS,
      payload: phone 
    })
  } catch (err) {
    dispatch({
      type: types.FETCH_PHONE_BY_ID + FAIL,
      payload: err,
      error: true
    })

  }
}

export const addPhoneToBasket = id => ({
  type: types.ADD_PHONE_TO_BASKET,
  payload: id
})

export const searchPhone = str => ({
  type: types.SEARCH_PHONE,
  payload: str
})

export const fetchCategories = () => async dispatch => {
  dispatch({ type: types.FETCH_CATEGORIES + START });
  
  try {
    const categories = await fetchCategoriesApi()
    dispatch({
      type: types.FETCH_CATEGORIES + SUCCESS,
      payload: categories
    })
  } catch (err) {
    dispatch({
      type: types.FETCH_CATEGORIES + FAIL,
      payload: err,
      error: true
    })
  }
}

export const removePhoneFromBasket = id => ({
   type: types.REMOVE_PHONE_FROM_BASKET,
   payload: id
})

export const clearBasket = () => ({
  type: types.CLEAR_BASKET,
})

export const basketCheckout = phones => async dispatch => {
  alert(JSON.stringify(phones));
}