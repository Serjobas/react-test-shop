import * as R from 'ramda';

import { SUCCESS } from 'constants/api';
import * as types from 'constants/phones';

const initialState = {
  ids: [],
  searchStr: ''
}

export default (state = initialState, action) => {
  const { type, payload } = action;

  switch (type) {
    case types.FETCH_PHONES + SUCCESS:
      return R.merge(state, {
        ids: R.pluck('id', payload)
      })
     
    case types.LOAD_MORE_PHONES + SUCCESS:
      const ids = R.pluck('id', payload);
      return R.merge(state, {
        ids: R.concat(state.ids, ids)
      })
      
    case types.SEARCH_PHONE:
      return R.merge(state, {
        searchStr: payload
      })  

    default:
      return state;
  }
}